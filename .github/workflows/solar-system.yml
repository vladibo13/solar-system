name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: ${{secrets.MONGO_URI}} 
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}  
  MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
    
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix:
            nodejs_version: [20]
            os: [ubuntu-latest, macos-latest]
            exclude:
              - nodejs_version: 18
                os: macos-latest
        runs-on: ${{ matrix.os }}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}
          
        - name: Cache NPM Dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}    
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          id: nodejs-unit-testing-step
          run: npm test
          
        - name: Archive Test Result
          # always() if failure() && # (steps.nodejs-unit-testing-step.outcome == 'failure' # || steps.nodejs-unit-testing-step.outcome == 'success')
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: Code Coverege
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup NodeJS Version 
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache NPM Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
          
      - name: Install Dependencies
        run: npm install
     
      - name: Check Code Coverage
        continue-on-error: true 
        run: npm run coverage       
        
      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage      
          retention-days: 3 
    
    docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repo
        uses: actions/checkout@v4   
      
      - name: DockeHub Login
        uses: docker/login-action@v3
        with:
          username: ${{vars.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}   